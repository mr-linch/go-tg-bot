// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	service "github.com/mr-linch/go-tg-bot/internal/service"
	mock "github.com/stretchr/testify/mock"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// User provides a mock function with given fields:
func (_m *Service) User() service.User {
	ret := _m.Called()

	var r0 service.User
	if rf, ok := ret.Get(0).(func() service.User); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(service.User)
		}
	}

	return r0
}

type mockConstructorTestingTNewService interface {
	mock.TestingT
	Cleanup(func())
}

// NewService creates a new instance of Service. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewService(t mockConstructorTestingTNewService) *Service {
	mock := &Service{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
