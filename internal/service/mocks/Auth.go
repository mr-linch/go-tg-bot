// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/mr-linch/go-tg-bot/internal/domain"
	mock "github.com/stretchr/testify/mock"

	tg "github.com/mr-linch/go-tg"
)

// Auth is an autogenerated mock type for the Auth type
type Auth struct {
	mock.Mock
}

// AuthViaBot provides a mock function with given fields: ctx, user
func (_m *Auth) AuthViaBot(ctx context.Context, user *tg.User) (*domain.User, error) {
	ret := _m.Called(ctx, user)

	var r0 *domain.User
	if rf, ok := ret.Get(0).(func(context.Context, *tg.User) *domain.User); ok {
		r0 = rf(ctx, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *tg.User) error); ok {
		r1 = rf(ctx, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAuth interface {
	mock.TestingT
	Cleanup(func())
}

// NewAuth creates a new instance of Auth. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuth(t mockConstructorTestingTNewAuth) *Auth {
	mock := &Auth{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
